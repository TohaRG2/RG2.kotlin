<?xml version="1.0" encoding="utf-8"?>
<resources>

    <string-array name="redi_title">
        <item>@string/redi_1_title</item>
        <item>@string/redi_2_title</item>
    </string-array>

    <integer-array name="redi_icon">
        <item>@drawable/redi_1</item>
        <item>@drawable/redi_2</item>
    </integer-array>

    <string-array name="redi_descr">
        <item>@string/redi_1_descr</item>
        <item>@string/redi_2_descr</item>
    </string-array>


    <string-array name="redi_url">
        <item>@string/redi_1_url</item>
        <item>@string/redi_2_url</item>
    </string-array>

    <string name="redi_1_title">Расстановка углов</string>
    <string name="redi_1_descr" formatted="false"><![CDATA[
        <p>Для начала несколько слов об устройстве этой головоломки. У нее, как и у обычного кубика
        3х3 есть 8 углов - элементов с тремя наклейками,</p>
        <p style="text-align:center"><img src="redi_1_1.xml"></p>

        <p>и 12 ребер - элементов с двумя наклейками.</p>
        <p style="text-align:center"><img src="redi_1_2.xml"></p>

        <p>Центров, в отличие от кубика тут нет совсем.</p>

        <p>Не смотря на внешнюю схожесть с обычным кубиком, реди куб представляет собой разновидность
        скьюба и является одной из самых простых головоломок. По сложности, пожалуй, он чуть сложнее,
        чем IvyCube, а принципы сборки абсолютно аналогичны IvyCube.</p>

        <p>Первым делом нужно правильно развернуть все 8 углов.</p>
        <p>Поскольку положение всех восьми
        углов фиксировано, то для того чтобы правильно поставить все углы, ищем 4 угла с наклейкой
        одного цвета, например, с белой.  Та сторона, в которой есть эти четыре угла и должна в
        итоге стать белой, поэтому разворачиваем углы так, чтобы все они смотрели белой наклейкой
        в одну эту сторону.</p>
        <p style="text-align:center"><img src="redi_1_3.xml"></p>

        <p>Теперь, аналогичным образом, развернем другие четыре угла уже желтой наклейкой в
        противоположную сторону.</p>
        <p style="text-align:center"><img src="redi_1_4.xml"></p>

        <p>Цвет углов остальных четырех сторон у нас должен совпасть автоматически.</p>
    ]]></string>
    <string name="redi_1_url">lPQHCTnL5c4</string>


    <string name="redi_2_title">Расстановка ребер</string>
    <string name="redi_2_descr" formatted="false"><![CDATA[
        <p>На этом этапе все очень похоже на сборку Ivy cube, и выполняется при помощи всего лишь
        одного четырехходового, очень простого и понятного алгоритма, который меняет местами ТРИ
        соприкасающихся ребра на одной или двух смежных гранях. Причем одно ребро должно быть на
        правой, другое на левой грани, а третье должно находиться между ними и соприкасаться с
        обоими ребрами. Соответственно будем называть их правое, левое и среднее ребро.</p>

        <p>Как и в айвикубе, крутить головоломку мы будем за два смежных угла, причем будем
        чередовать вращения правого и левого угла. Самое главное понять, какие первые два хода
        нам нужно сделать, т.к. последующие два хода будут просто противоположны этим двум.</p>

        <p>Как я уже сказал выше, алгоритм меняет местами три ребра (3:24): среднее и два боковых, т.е.
        одно из боковых ребер окажется на месте среднего, среднее окажется на месте второго
        бокового, а то в свою очередь, на месте первого.</p>

        <p>И первым ходом нам необходимо поставить в центр то ребро, которое и должно в итоге
        там оказаться. Вторым ходом помещаем в центр то ребро, на месте которого должно в
        итоге оказаться среднее ребро. Теперь отменяем первый ход и отменяем второй ход.</p>

        <p>Например:</p>
        <p>1. Все три ребра на одной грани.</p>
        <p style="text-align:center"><img src="redi_2_1.xml"></p>
        В

        <p></p>

        2. Ребра на смежных гранях.

    ]]></string>
    <string name="redi_2_url">lPQHCTnL5c4</string>


</resources>
